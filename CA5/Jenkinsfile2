pipeline {
    agent any

    environment {
        GRADLE_HOME = "${env.WORKSPACE}/CA2/Part2/react-and-spring-data-rest-basic"
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out...'
                git url: 'https://github.com/NathaliaTGodoy/devops-23-24-PSM-1231864.git'
            }
        }

        stage('Assemble') {
            steps {
                echo 'Assembling...'
                dir("${GRADLE_HOME}") {
                    sh 'chmod +x gradlew'
                    sh './gradlew assemble'
                }
            }
        }

        stage('Test') {
            steps {
                echo 'Running tests...'
                dir("${GRADLE_HOME}") {
                    sh './gradlew test'
                    junit 'build/test-results/test/*.xml'
                }
            }
        }

        stage('Javadoc') {
                    steps {
                        echo 'Generating Javadocs...'
                        dir("${GRADLE_HOME}") {
                            sh './gradlew javadoc'
                        }
                        publishHTML(target: [
                            allowMissing: false,
                            alwaysLinkToLastBuild: true,
                            keepAll: true,
                            reportDir: 'CA2/Part2/react-and-spring-data-rest-basic/build/docs/javadoc',
                            reportFiles: 'index.html',
                            reportName: 'Javadoc'
                            ])
                    }
                }

        stage('Archive') {
                steps {
                    echo 'Archiving...'
                    dir("${GRADLE_HOME}") {
                        archiveArtifacts artifacts: 'build/libs/*.jar', allowEmptyArchive: true
                    }
                }
            }

        stage('Docker Image') {
                    steps {
                        echo 'Creating Dockerfile...'
                            script {
                                dir("${GRADLE_HOME}") {
                                    def dockerfileContent = """
                                    FROM tomcat:10-jdk17-openjdk-slim
                                    COPY build/libs/react-and-spring-data-rest-basic-0.0.1-SNAPSHOT.war /usr/local/tomcat/webapps/react-and-spring-data-rest-basic-0.0.1-SNAPSHOT.war
                                    EXPOSE 8080
                                    CMD ["catalina.sh", "run"]
                                    """
                                    writeFile file: 'DockerfileCA2Part2', text: dockerfileContent
                                }
                            }
                        }
                    }

        stage('Publish Docker Image') {
            steps {
                echo 'Publishing Docker image...'
                    script {
                        dir("${GRADLE_HOME}") {
                            def dockerImage = docker.build("nathaliatgodoy/devops:${env.BUILD_ID}", "-f DockerfileCA2Part2 .")
                            docker.withRegistry('https://index.docker.io/v1/', 'docker_id') {
                            dockerImage.push()
                            }
                        }
                    }
                }
            }
        }


    post {
        always {
            cleanWs()
        }
    }
}

